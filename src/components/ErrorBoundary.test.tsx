import * as React from 'react';
import '@testing-library/jest-dom/extend-expect';
import { render } from '@testing-library/react';

import { renderWithTheme } from '../../test';
import ErrorBoundary from './ErrorBoundary';

describe('<ErrorBoundary/>', () => {
  const ProblemChild = () => {
    throw new Error('Error thrown from problem child');
  };

  beforeAll(() => {
    jest.spyOn(console, 'error').mockImplementation(() => {
      // noop
    });
  });

  it('should display error message on error generated by child', () => {
    const { getByText } = renderWithTheme(
      <ErrorBoundary>
        <ProblemChild />
      </ErrorBoundary>,
    );
    expect(getByText('Oops! Something went wrong')).toBeInTheDocument();
  });

  it('should display child in case of no error', () => {
    const child = 'Text';
    const { getByText } = render(<ErrorBoundary>{child}</ErrorBoundary>);
    expect(getByText(child)).toBeInTheDocument();
  });
});
