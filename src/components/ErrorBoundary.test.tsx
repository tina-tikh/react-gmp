import * as React from 'react';
import '@testing-library/jest-dom/extend-expect';
import { render, screen } from '@testing-library/react';

import { renderWithTheme } from '../../test';
import ErrorBoundary from './ErrorBoundary';

describe('<ErrorBoundary/>', () => {
  function ProblemChild() {
    throw new Error('Error thrown from problem child');
    return <div>Error</div>;
  }

  beforeAll(() => {
    jest.spyOn(console, 'error').mockImplementation(() => {
      //noop
    });
  });

  it('should display error message on error generated by child', () => {
    const { getByText } = renderWithTheme(
      <ErrorBoundary>
        <ProblemChild></ProblemChild>
      </ErrorBoundary>
    );
    expect(getByText('Oops! Something went wrong')).toBeInTheDocument();
  });

  it('should display child in case of no error', () => {
    const child = 'Text';
    render(<ErrorBoundary>{child}</ErrorBoundary>);
    expect(screen.getByText(child)).toBeInTheDocument();
  });
});
